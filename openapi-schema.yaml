# OpenAPI Schema for Interview Agent Custom GPT Actions
# File: interview-agent/openapi-schema.yaml
#
# This schema enables dynamic loading of technology-specific content from GitHub
# Copy this entire file into your Custom GPT's Actions configuration

openapi: 3.1.0

info:
  title: Interview Agent Content API
  description: |
    Dynamic content loader for Interview Agent. Fetches technology-specific
    configurations and question banks from GitHub repository.

    Enables multi-technology support without bloating GPT context window.
  version: 2.0.0
  contact:
    name: Interview Agent
    url: https://github.com/bardin08/interview-agent

servers:
  - url: https://raw.githubusercontent.com/Bardin08/interview-agent/refs/heads/main/

paths:
  /technologies.json:
    get:
      operationId: listTechnologies
      summary: List all available interview technologies
      description: |
        Returns metadata for all supported technologies including:
        - Technology ID and display name
        - Icon and status (active/coming_soon)
        - Brief description

        Use this to show user available options or validate technology selection.
      responses:
        '200':
          description: Successfully retrieved technologies list
          content:
            application/json:
              schema:
                type: object
                properties:
                  technologies:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          description: Technology identifier (e.g., 'csharp', 'python')
                          example: csharp
                        name:
                          type: string
                          description: Display name
                          example: "C# & .NET"
                        icon:
                          type: string
                          description: Emoji icon
                          example: "#Ô∏è‚É£"
                        status:
                          type: string
                          enum: [active, coming_soon, planned]
                          description: Availability status
                          example: active
                        description:
                          type: string
                          description: Brief technology description
                          example: "C# language, .NET Framework, ASP.NET Core"
                      required:
                        - id
                        - name
                        - status
              example:
                technologies:
                  - id: csharp
                    name: "C# & .NET"
                    icon: "#Ô∏è‚É£"
                    status: active
                    description: "C# language, .NET Framework, ASP.NET Core"
                  - id: python
                    name: Python
                    icon: "üêç"
                    status: active
                    description: "Python, Django, Flask, FastAPI, Data Science"

  /technologies/{tech}/config.yaml:
    get:
      operationId: getTechnologyConfig
      summary: Load technology configuration
      description: Fetches technology configuration with topics, frameworks, resources, and experience levels for interview planning.
      parameters:
        - name: tech
          in: path
          required: true
          description: Technology identifier (from listTechnologies)
          schema:
            type: string
            enum: [csharp, python, javascript, java, go, ruby, rust]
          examples:
            csharp:
              value: csharp
              summary: C# & .NET configuration
            python:
              value: python
              summary: Python configuration
      responses:
        '200':
          description: Technology configuration in YAML format
          content:
            text/plain:
              schema:
                type: string
                description: YAML configuration file content
              example: |
                technology:
                  id: csharp
                  name: C# & .NET
                  icon: "#Ô∏è‚É£"
                  topics:
                    - C# Language Fundamentals
                    - Object-Oriented Programming
                  frameworks:
                    - name: .NET Core
                      versions: [8.0, 7.0, 6.0]
                  resources:
                    official_docs:
                      - name: Microsoft C# Documentation
                        url: https://docs.microsoft.com/dotnet/csharp/
        '404':
          description: Technology not found
          content:
            text/plain:
              schema:
                type: string
              example: "404: Not Found"

  /technologies/{tech}/questions.md:
    get:
      operationId: getTechnologyQuestions
      summary: Load technology question bank
      description: Fetches interview questions organized by topics with difficulty levels, key concepts, and answer points.
      parameters:
        - name: tech
          in: path
          required: true
          description: Technology identifier
          schema:
            type: string
            enum: [csharp, python, javascript, java, go, ruby, rust]
          examples:
            csharp:
              value: csharp
              summary: C# interview questions
      responses:
        '200':
          description: Question bank in Markdown format
          content:
            text/plain:
              schema:
                type: string
                description: Markdown file with structured questions by topic
              example: |
                # C# Interview Questions

                ## C# Language Fundamentals

                ### What's the difference between value types and reference types?

                **Key Points:**
                - Value types store data directly
                - Reference types store memory address
                - Value types on stack, reference on heap
        '404':
          description: Technology question bank not found

components:
  schemas:
    Technology:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier
        name:
          type: string
          description: Display name
        icon:
          type: string
          description: Emoji icon
        status:
          type: string
          enum: [active, coming_soon, planned]
        description:
          type: string
      required:
        - id
        - name
        - status

    Topic:
      type: object
      properties:
        name:
          type: string
        question_count:
          type: integer
        difficulty_range:
          type: array
          items:
            type: string

  securitySchemes:
  # Optional: Add GitHub token for higher rate limits (5000 req/hour vs 60)
  # githubToken:
  #   type: apiKey
  #   in: header
  #   name: Authorization
  #   description: |
  #     GitHub Personal Access Token for higher rate limits.
  #     Format: "token YOUR_GITHUB_TOKEN"
  #
  #     Without token: 60 requests/hour
  #     With token: 5,000 requests/hour

# No security required for public repositories
security: []

tags:
  - name: Technologies
    description: Technology metadata and discovery
  - name: Content
    description: Question banks and configurations
  - name: Metadata
    description: Topics and structure information

externalDocs:
  description: Interview Agent Documentation
  url: https://github.com/bardin08/interview-agent
